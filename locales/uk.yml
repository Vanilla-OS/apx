flags:
  apt: "Встановити пакунки з репозиторію Ubuntu."
  aur: "Встановити пакети з AUR (Arch репозиторій)."
  dnf: "Встановити пакети з репозиторія Fedora DNF (Dandified YUM)."
  apk: "Встановити пакети з репозиторію Alpine."
  zypper: "Встановити пакети з репозиторію OpenSUSE."
  xbps: "Встановити пакети з репозиторію Void (Linux)."
  nix: "Встановіть пакунки з репозиторію Nixpkgs (пакунки Nix)."
  swupd: "Встановлення пакунків з магазину Clear Linux*"
  name: " Застосувати до користувацького контейнеру з такою назвою."
apx:
  use: "apx"
  long: "Apx - це менеджер пакунків з підтримкою декількох джерел,\nщо дозволяє встановлювати\
    \ пакунки у керований контейнер."
  short: "Apx - це менеджер пакунків з підтримкою декількох джерел,\nщо дозволяє встановлювати\
    \ пакунки у керований контейнер."
  verboseFlag: "Показати детальніший вивід"
  allFlag: "Застосувати для всіх контейнерів."
  cxl: "Операцію скасовано на прохання користувача."
  assumeYes: "Продовжити без ручного підтвердження."
  notForNix: "Ця команда не застосовується до середовища nix."
autoremove:
  use: "autoremove"
  long: "Автоматично видаляти всі невикористані пакунки"
  short: "Автоматично видаляти всі невикористані пакунки"
clean:
  use: "clean"
  long: "Очищення кешу менеджера пакунків apx"
  short: "Очищення кешу менеджера пакунків apx"
enter:
  use: "enter"
  long: "Введіть shell в керованому контейнері"
  short: "Введіть shell в керованому контейнері"
  failedEnter: "не вдалося увійти в керований контейнер"
  outside: "Тепер ви знаходитесь поза керованим контейнером."
export:
  use: "export <програма/бінарний>"
  long: "Експорт/відтворення елемента робочого столу програми з керованого контейнера"
  short: "Експорт/відтворення елемента робочого столу програми з керованого контейнера"
  binFlag: "Експорт бінарної команди"
init:
  use: "init"
  long: "Ініціалізація керованого контейнера"
  short: "Ініціалізація керованого контейнера"
  confirm: "Контейнер вже існує. Ви хочете повторно ініціалізувати його? Ця операція\
    \ видалить все, включно з вашими файлами у контейнері."
  remove: "помилка видалення контейнера: %v"
  create: "помилка створення контейнера: %v"
install:
  use: "apx install <пакунок>"
  long: "Встановлення пакунків всередині керованого контейнера."
  short: "Встановлення пакунків всередині керованого контейнера."
  assumeYes: "Продовжити без ручного підтвердження"
  fixBroken: "Виправити непрацюючі залежності перед встановленням"
  noExport: "Не експортувати запис на робочому столі після встановлення."
  sideload: "Встановити пакунок з локального файлу."
  sideArgs: "sideload вимагає шлях до локального файлу"
  sideUserTemp: "не вдається перемістити файл до користувача temp: %s"
  exportBinPrompt: "Експортувати бінарні %s на хост?\nЦе дозволить вам викликати його\
    \ безпосередньо з оболонки без використання \"apx run\".\nВи також можете експортувати\
    \ його пізніше за допомогою \"apx export --bin %s\""
list:
  use: "list"
  long: "Перерахувати встановлені пакунки."
  short: "Перерахувати встановлені пакунки."
  upgradable: "Показати пакунки, які можна оновити"
  installed: "Показати встановлені пакунки"
nix:
  use: "nix"
  long: "Керування власним встановленням nix у вашому каталозі $HOME.\n\nІнтеграція\
    \ `apx nix` слугує обгорткою для\nстандартного профілю nix. Після встановлення\
    \ ви можете вільно користуватися будь-якими можливостями nix без використання\
    \ команди `apx nix`.\nnix без використання команди `apx nix`."
  short: "Керування встановленням nix"
nixinit:
  use: "init"
  long: "Ініціалізує власне встановлення nix шляхом створення $HOME/.nix і налаштування\
    \ деяких системних блоків SystemD для монтування у каталог /nix."
  short: "Ініціалізація nix-репозиторію"
  confirm: "Це створить теку '.nix' у вашому домашньому каталозі і налаштує деякі\
    \ пристрої SystemD на монтування цієї теки у /nix перед початком встановлення.\
    \ Підтвердіть \"y\", щоб продовжити."
  unfree: "Ви хочете дозволити \"невільні\" пакунки без ліцензій з відкритим вихідним\
    \ кодом (Visual Studio Code, Spotify тощо)?"
  insecure: "Чи хочете ви дозволити \"небезпечні\" пакунки (програмне забезпечення\
    \ з відомими вразливостями)?"
  swcenter: "Бажаєте встановити Nix Software Center - графічний менеджер програмного\
    \ забезпечення для Nix?"
  success: "Встановлення завершено. Перезавантажтеся, щоб почати використовувати nix."
nixremove:
  use: "remove"
  long: "Видаліть перший відповідний пакунок, встановлений у типовому профілі nix.\n\
    \nЗауваження: Ви можете мати декілька встановлених пакунків одного і того ж пакунка.\n\
    \nЯкщо вам потрібна більша точність, скористайтеся командами 'nix profile list'\
    \ і 'nix profile remove'."
  short: "Видалення пакунка nix"
  success: "Видалення пакунку завершено"
nixinstall:
  use: "install <pkg>"
  long: "Встановіть пакунок зі сховища `nixpkgs` як flake до стандартного профілю\
    \ nix."
  short: "Встановлення пакунка nix"
  allowUnfree: "Дозволити пакунки з невільними ліцензіями"
  allowInsecure: "Дозволити пакунки з відомими уразливостями."
  error: "помилка встановлення пакунків"
  runInit: "Ви вже виконували команду `init`?"
  success: "Пакунок успішно встановлено."
nixupgrade:
  success: "Успішно оновлено пакунок."
  atleastone: "Потрібно принаймні одне ім'я пакунка."
purge:
  use: "purge <пакунки>"
  long: "Очищення пакунків всередині керованого контейнера"
  short: "Очищення пакунків всередині керованого контейнера"
remove:
  use: "remove <пакунок>"
  long: "Видалення пакунків всередині керованого контейнера."
  short: "Видалення пакунків всередині керованого контейнера."
run:
  use: "run <команду>"
  long: "Запуск програми всередині керованого контейнера."
  short: "Запуск програми всередині керованого контейнера."
  nixMsg: "Не використовуйте `apx run` для nix-пакунків. Запускайте їх безпосередньо,\
    \ як звичайні пакунки."
search:
  use: "search <пакунків>"
  long: "Пошук пакунків у керованому контейнері."
  short: "Пошук пакунків у керованому контейнері."
show:
  use: "show <пакунок>"
  long: "Показати детальну інформацію про пакунок"
  short: "Показати детальну інформацію про пакунок"
  isInstalled: "Повертає лише інформацію про те, чи встановлено пакунок"
  found: "%s встановлено"
  notFound: "%s не встановлено"
unexport:
  use: "unexport <пакунок>"
  long: "Відмінити експорт/видалити елемент стільниці програми з керованого контейнера.\n\
    Якщо вказано прапорець --bin, видалити посилання на бінарний файл контейнера."
  short: "Відмінити експорт/видалити елемент робочого столу програми з керованого\
    \ контейнера"
  binFlag: "Відмінити експорт раніше експортованого бінарного файлу."
  success: "Успішно видалено експортований бінарний `%s`."
update:
  use: "update"
  long: "Оновлення списку доступних пакунків"
  short: "Оновлення списку доступних пакунків"
  allFlag: "Застосовується до всіх контейнерів"
upgrade:
  use: "upgrade"
  long: "Оновлення системи шляхом встановлення/оновлення доступних пакунків."
  short: "Оновлення системи шляхом встановлення/оновлення доступних пакунків."
