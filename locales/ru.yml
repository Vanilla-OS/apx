flags:
  apt: "Установка пакетов из репозитория Ubuntu."
  aur: "Установка пакетов из репозитория AUR (Arch User Repository)."
  dnf: "Установка пакетов из репозитория Fedora DNF (Dandified YUM)."
  apk: "Установка пакетов из репозитория Alpine."
  zypper: "Установка пакетов из репозитория OpenSUSE."
  xbps: "Установка пакетов из репозитория Void (Linux)."
  nix: "Установка пакетов из репозитория Nixpkgs (Nix packages)."
  swupd: "Установка пакетов из магазина Clear Linux*"
  name: " Применить к собственному контейнеру с этим названием."
apx:
  use: "apx"
  long: "Apx - это пакетный менеджер с поддержкой нескольких источников,\nпозволяющий
    вам устанавливать пакеты в управляемом контейнере."
  short: "Apx - это пакетный менеджер с поддержкой нескольких источников,\nпозволяющий
    вам устанавливать пакеты в управляемом контейнере."
  verboseFlag: "показать более подробный вывод"
  allFlag: "Применить ко всем контейнерам."
  cxl: "Операция отменена по запросу пользователя."
  assumeYes: "Продолжить без подтверждения вручную."
  notForNix: "Данная команда неприменима к окружению nix."
autoremove:
  use: "autoremove"
  long: "Автоматически удалить все неиспользуемые пакеты"
  short: "Автоматически удалить все неиспользуемые пакеты"
clean:
  use: "clean"
  long: "Очистить кэш пакетного менеджера apx"
  short: "Очистить кэш пакетного менеджера apx"
enter:
  use: "enter"
  long: "Войти в окружение управляемого контейнера"
  short: "Войти в окружение управляемого контейнера"
  failedEnter: "не удалось войти в управляемый контейнер"
  outside: "Вы сейчас вне управляемого контейнера."
export:
  use: "export <программа/бинарный файл>"
  long: "Экспортировать или пересоздать ярлык программы из управляемого контейнера"
  short: "Экспортировать или пересоздать ярлык программы из управляемого контейнера"
  binFlag: "Экспортировать команду бинарника"
init:
  use: "init"
  long: "Инициализировать управляемый контейнер"
  short: "Инициализировать управляемый контейнер"
  confirm: "Контейнер уже существует. Хотите ли вы его инициализировать снова? Данная
    операция удалит все данные в контейнере."
  remove: "ошибка удаления контейнера: %v"
  create: "ошибка создания контейнера: %v"
install:
  use: "apx install <пакет>"
  long: "Установить пакеты внутри управляемого контейнера."
  short: "Установить пакеты внутри управляемого контейнера."
  assumeYes: "Продолжить без подтверждения вручную"
  fixBroken: "Исправить сломанные зависимости перед установкой"
  noExport: "Не экспортировать ярлык после установки."
  sideload: "Установить пакет из локального файла."
  sideArgs: "установка из локального файла требует путь к нему"
  sideUserTemp: "не могу переместить файл во временную директорию пользователя: %s"
  exportBinPrompt: "Экспортировать бинарник %s?\nЭто позволит вам вызывать его напрямую,
    не используя \"apx run\".\nВы также можете экспортировать его позже, используя
    \"apx export --bin %s\""
list:
  use: "list"
  long: "Показать установленные пакеты."
  short: "Показать установленные пакеты."
  upgradable: "Показать обновляемые пакеты"
  installed: "Показать установленные пакеты"
nix:
  use: "nix"
  long: "Управление собственной установкой nix в вашей директории $HOME.\n\nИнтеграция
    `apx nix` используется как обертка для\nстандартного профиля nix. Когда она установлена,
    вы можете\nсвободно использовать возможности nix, не используя команду `apx nix`."
  short: "Управление установкой nix"
nixinit:
  use: "init"
  long: "Инициализирует собственную установку nix созданием директории $HOME/.nix
    и настройкой некоторых юнитов SystemD, чтобы монтировать ее как /nix."
  short: "Инициализировать репозиторий nix"
  confirm: "Это создаст директорию '.nix' в вашей домашней директории и настроит некоторые
    юниты SystemD для монтирования ее в /nix перед установкой. Подтвердите с помощью
    'y' для продолжения."
  unfree: "Хотите ли вы разрешить 'несвободные' пакеты без лицензий Open Source (Visual
    Studio Code, Spotify и т.д.)?"
  insecure: "Хотите ли вы разрешить 'небезопасные' пакеты (софт с известными уязвимостями)?"
  swcenter: "Хотите ли вы установить Nix Software Center - графический менеджер софта
    для Nix?"
  success: "Установка завершена. Перезагрузитесь, чтобы начать использовать nix."
nixremove:
  use: "remove"
  long: "Удалить первый совпадающий пакет, установленный в стандартном профиле nix.\n
    \nПримечание: Возможно иметь несколько установленных одинаковых пакетов.\n\nЕсли
    вам нужна большая точность, используйте 'nix profile list' и 'nix profile remove'."
  short: "Удалить nix пакет"
  success: "Удаление пакета завершено"
nixinstall:
  use: "install <pkg>"
  long: "Установить пакет из `nixpkgs` репозитория в качестве flake в стандартном
    профиле nix."
  short: "Установить nix пакет"
  allowUnfree: "Разрешить пакеты с несвободными лицензиями"
  allowInsecure: "Разрешить пакеты с известными уязвимостями."
  error: "ошибка установки пакетов"
  runInit: "Запускали ли вы команду `init`?"
  success: "Пакет успешно установлен."
nixupgrade:
  success: "Пакет успешно обновлен."
  atleastone: "Требуется как минимум одно название пакета."
purge:
  use: "purge <пакеты>"
  long: "Очистить пакеты в управляемом контейнере"
  short: "Очистить пакеты в управляемом контейнере"
remove:
  use: "remove <пакет>"
  long: "Удалить пакеты внутри управляемого контейнера."
  short: "Удалить пакеты внутри управляемого контейнера."
run:
  use: "run <команда>"
  long: "Запустить программу внутри управляемого контейнера."
  short: "Запустить программу внутри управляемого контейнера."
  nixMsg: "Не используйте `apx run` для пакетов nix. Запускайте их напрямую, как вы
    бы делали с нативными пакетами."
search:
  use: "search <пакеты>"
  long: "Искать пакеты в управляемом контейнере."
  short: "Искать пакеты в управляемом контейнере."
show:
  use: "show <пакет>"
  long: "Показать подробности пакета"
  short: "Показать подробности пакета"
  isInstalled: "Возвращать только тогда, когда пакет установлен"
  found: "%s установлен"
  notFound: "%s не установлен"
unexport:
  use: "unexport <пакет>"
  long: "Деэкспортировать или удалить ярлык программы из управляемого контейнера.\n
    Если есть флаг --bin, удалить ссылку на бинарник контейнера."
  short: "Деэкспортировать или удалить ярлык программы из управляемого контейнера"
  binFlag: "Деэкспортировать ранее экспортированный бинарник."
  success: "Успешно удален экспортированный бинарник `%s`."
update:
  use: "update"
  long: "Обновить список доступных пакетов"
  short: "Обновить список доступных пакетов"
  allFlag: "Применить ко всем контейнерам"
upgrade:
  use: "upgrade"
  long: "Обновить систему установкой или обновлением доступных пакетов."
  short: "Обновить систему установкой или обновлением доступных пакетов."
