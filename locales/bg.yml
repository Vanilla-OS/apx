flags:
  apt: "Инсталирайте пакети от хранилището на Ubuntu."
  aur: "Инсталирайте пакети от AUR (Arch User Repository)."
  dnf: "Инсталирайте пакети от хранилището DNF (Dandified YUM) на Fedora."
  apk: "Инсталирайте пакети от хранилището на Alpine."
  zypper: "Инсталирайте пакети от хранилището на OpenSUSE."
  xbps: "Инсталирайте пакети от хранилището Void (Linux)."
  nix: "Инсталирайте пакети от хранилището Nixpkgs (пакети Nix)."
  swupd: "Инсталиране на пакети от магазина на Clear Linux*"
  name: " Прилага се към потребителски контейнер с това име."
apx:
  use: "apx"
  long: "Apx е мениджър на пакети с поддръжка на множество източници,\nи ви позволява
    да инсталирате пакети в управляван контейнер."
  short: "Apx е мениджър на пакети с поддръжка на множество източници,\nи ви позволява
    да инсталирате пакети в управляван контейнер."
  verboseFlag: "покажете по-подробен изход"
  allFlag: "Приложи за всички контейнери."
  cxl: "Операцията е отменена по искане на потребителя."
  assumeYes: "Продължете без ръчно потвърждение."
  notForNix: "Тази команда не се прилага за средата nix."
autoremove:
  use: "autoremove"
  long: "Автоматично премахване на всички неизползвани пакети"
  short: "Автоматично премахване на всички неизползвани пакети"
clean:
  use: "clean"
  long: "Почистване на кеша на мениджъра на пакети apx"
  short: "Почистване на кеша на мениджъра на пакети apx"
enter:
  use: "enter"
  long: "Влезте в shell в управлявания контейнер"
  short: "Въвеждане в shell в управлявания контейнер"
  failedEnter: "не успя да влезе в управлявания контейнер"
  outside: "Вече сте извън управлявания контейнер."
export:
  use: "export <програма/бинарен файл>"
  long: "Експортиране/създаване на запис на работния плот на програма от управляван
    контейнер"
  short: "Експортиране/създаване на запис на работния плот на програма от управляван
    контейнер"
  binFlag: "Команда за експортиране на двоичен файл"
init:
  use: "init"
  long: "Иницииране на управляван контейнер"
  short: "Иницииране на управляван контейнер"
  confirm: "Контейнерът вече съществува. Искате ли да го инициализирате отново? Тази
    операция ще премахне всичко, включително файловете ви в контейнера."
  remove: "грешка при премахване на контейнер: %v"
  create: "грешка при създаването на контейнер: %v"
install:
  use: "apx install <пакет>"
  long: "Инсталиране на пакети в управляван контейнер."
  short: "Инсталиране на пакети в управляван контейнер."
  assumeYes: "Продължете без ръчно потвърждение"
  fixBroken: "Поправяне на счупени зависимости преди инсталиране"
  noExport: "Не експортирайте запис на работния плот след инсталацията."
  sideload: "Инсталиране на пакет от локален файл."
  sideArgs: "sideload изисква пътя до локален файл"
  sideUserTemp: "не мога да преместя файл в потребителската памет: %s"
  exportBinPrompt: "Експортиране на двоичен код %s към хост?\nТова ще ви позволи да
    го извикате директно от шела, без да използвате \"apx run\".\nМожете също така
    да го експортирате по-късно, като използвате \"apx export --bin %s\""
list:
  use: "list"
  long: "Списък на инсталираните пакети."
  short: "Списък на инсталираните пакети."
  upgradable: "Показване на пакетите за надграждане"
  installed: "Показване на инсталираните пакети"
nix:
  use: "nix"
  long: "Управлявайте потребителска инсталация на nix в директорията си $HOME.\n\n
    Интеграцията `apx nix` служи като обвивка за\nпрофила на nix по подразбиране.
    След като сте инсталирали, можете да използвате всички функции на\nnix, без да
    използвате командата `apx nix`."
  short: "Управление на инсталацията на NIX"
nixinit:
  use: "init"
  long: "Инициира потребителска инсталация на nix, като създава $HOME/.nix и настройва
    някои SystemD единици да го монтират като /nix."
  short: "Иницииране на хранилището на NIX"
  confirm: "Това ще създаде папка \".nix\" в домашната ви директория и ще настрои
    някои модули на SystemD да монтират тази папка в /nix, преди да стартирате инсталацията.
    Потвърдете \"y\", за да продължите."
  unfree: "Искате ли да разрешите \"несвободни\" пакети без лицензи за отворен код
    (Visual Studio Code, Spotify и др.)?"
  insecure: "Искате ли да разрешите \"несигурни\" пакети (софтуер с известни уязвимости)?"
  swcenter: "Искате ли да инсталирате Nix Software Center - графичен софтуерен мениджър
    за Nix?"
  success: "Инсталацията е завършена. Рестартирайте, за да започнете да използвате
    nix."
nixremove:
  use: "remove"
  long: "Премахване на първия съответстващ пакет, инсталиран в профила по подразбиране
    на nix.\n\nЗабележка: Възможно е да има няколко инсталации на един и същ пакет.\n
    \nАко се нуждаете от по-голяма точност, използвайте 'nix profile list' и 'nix
    profile remove'."
  short: "Премахване на пакет на NIX"
  success: "Премахването на пакета е завършено"
nixinstall:
  use: "install <pkg>"
  long: "Инсталиране на пакет от хранилището `nixpkgs` като flake в профила по подразбиране
    на nix."
  short: "Инсталиране на пакета NIX"
  allowUnfree: "Разрешаване на пакети с несвободни лицензи"
  allowInsecure: "Разрешаване на пакети с известни уязвимости."
  error: "грешка при инсталиране на пакети"
  runInit: "Изпълнихте ли вече командата `init`?"
  success: "Успешно инсталиран пакет."
nixupgrade:
  success: "Успешно надграден пакет."
  atleastone: "Изисква се поне едно име на пакет."
purge:
  use: "purge <пакети>"
  long: "Изчистване на пакети в управляван контейнер"
  short: "Изчистване на пакети в управляван контейнер"
remove:
  use: "remove <пакет>"
  long: "Премахване на пакети в управляван контейнер."
  short: "Премахване на пакети в управляван контейнер."
run:
  use: "run <команда>"
  long: "Изпълнение на програма в управляван контейнер."
  short: "Изпълнение на програма в управляван контейнер."
  nixMsg: "Не използвайте `apx run` за пакети за NIX. Стартирайте ги директно, както
    бихте направили с роден пакет."
search:
  use: "search <пакети>"
  long: "Търсене на пакети в управляван контейнер."
  short: "Търсене на пакети в управляван контейнер."
show:
  use: "show <пакети>"
  long: "Показване на подробна информация за даден пакет"
  short: "Показване на подробна информация за даден пакет"
  isInstalled: "Връща само дали пакетът е инсталиран"
  found: "%s е инсталиран"
  notFound: "„%s“ не е инсталиран"
unexport:
  use: "unexport <пакет>"
  long: "Изваждане/премахване на записа на програмата на работния плот от управляван
    контейнер.\nАко е зададен флаг --bin, премахнете връзката към двоичния файл на
    контейнера."
  short: "Извеждане/премахване на запис на десктопа на програма от управляван контейнер"
  binFlag: "Изпращане на предварително експортиран двоичен файл."
  success: "Успешно премахнахте експортирания двоичен файл `%s`."
update:
  use: "update"
  long: "Актуализиране на списъка с налични пакети"
  short: "Актуализиране на списъка с налични пакети"
  allFlag: "Приложи за всички контейнери"
upgrade:
  use: "upgrade"
  long: "Обновяване на системата чрез инсталиране/обновяване на наличните пакети."
  short: "Обновяване на системата чрез инсталиране/обновяване на наличните пакети."
