flags:
  apt: "Pakketten vanuit de Ubuntu-repository installeren"
  aur: "Pakketten vanuit de AUR (Arch User Repository) installeren"
  dnf: "Pakketten vanuit Fedora's DNF (Dandified YUM) installeren"
  apk: "Pakketten vanuit de Alpine-repository installeren"
  zypper: "Pakketten vanuit de OpenSUSE-repository installeren"
  xbps: "Pakketten vanuit de Void-repository installeren"
  nix: "Pakketten vanuit de Nixpkgs-repository installeren"
  name: "Toepassen op aangepaste container met deze naam"
apx:
  use: "apx"
  long: "Apx is een pakketbeheerder met ondersteuning voor meerdere bronnen, waarmee\
    \ u pakketten kunt installeren in een beheerde container."
  short: "Apx is een pakketbeheerder met ondersteuning voor meerdere bronnen, waarmee\
    \ u pakketten kunt installeren in een beheerde container."
  verboseFlag: "Gedetailleerdere uitvoer tonen"
  allFlag: "Toepassen op alle containers"
  cxl: "Handeling geannuleerd op verzoek van gebruiker"
  assumeYes: "Doorgaan zonder handmatige bevestiging"
  notForNix: "Deze opdracht is niet van toepassing op de nix-omgeving"
autoremove:
  use: "autoremove"
  long: "Alle ongebruikte pakketten automatisch verwijderen"
  short: "Alle ongebruikte pakketten automatisch verwijderen"
clean:
  use: "clean"
  long: "De apx-pakketbeheerders-cache opschonen"
  short: "De apx-cache opschonen"
enter:
  use: "enter"
  long: "Een shell in de beheerde container binnengaan"
  short: "Een shell in de container binnengaan"
  failedEnter: "Beheerde container binnengaan mislukt"
  outside: "U bent nu buiten de beheerde container"
export:
  use: "export <programma>"
  long: "App-pictogram (opnieuw) aanmaken vanuit een beheerde container"
  short: "App-pictogram aanmaken vanuit container"
  binFlag: "Programmaopdracht exporteren"
init:
  use: "init"
  long: "Beheerde container initialiseren"
  short: "Beheerde container initialiseren"
  confirm: "De container bestaat al. Wilt u deze opnieuw initialiseren? Deze handeling\
    \ zal alles verwijderen, inclusief uw bestanden in de container."
  remove: "Container verwijderen mislukt: %v"
  create: "Container aanmaken mislukt: %v"
install:
  use: "apx install <pakket>"
  long: "Pakketten installeren in een beheerde container"
  short: "Pakketten installeren in een container"
  assumeYes: "Doorgaan zonder handmatige bevestiging"
  fixBroken: "Incorrecte afhankelijkheden repareren voor de installatie"
  noExport: "Geen app-pictogram aanmaken na de installatie"
  sideload: "Pakket installeren vanuit een lokaal bestand"
  sideArgs: "Sideload vereist het pad naar een lokaal bestand"
  sideUserTemp: "Kan bestand niet verplaatsen naar tijdelijke bestanden: %s"
  exportBinPrompt: "Binaire %s exporteren naar host?\nHiermee kunt u het direct vanuit\
    \ de shell aanroepen zonder \"apx run\" te gebruiken.\nU kunt het later ook exporteren\
    \ met \"apx export --bin %s\"."
list:
  use: "list"
  long: "Geïnstalleerde pakketten tonen"
  short: "Geïnstalleerde pakketten tonen"
  upgradable: "Pakketten met updates tonen"
  installed: "Geïnstalleerde pakketten tonen"
nix:
  use: "nix"
  long: "Manage a custom installation of nix in your $HOME directory.\n\nThe `apx\
    \ nix` integration serves as a wrapper for the\ndefault nix profile. Once installed,\
    \ you are free to use any features of\nnix without using the `apx nix` command."
  short: "Nix-installatie beheren"
nixinit:
  use: "init"
  long: "Initializes a custom installation of nix by creating $HOME/.nix and setting\
    \ up some SystemD units to mount it as /nix."
  short: "Nix-repository initialiseren"
  confirm: "This will create a '.nix' folder in your home directory and set up some\
    \ SystemD units to mount that folder at /nix before running the installation.\
    \ Confirm 'y' to continue."
  unfree: "Would you like to allow 'unfree' packages without Open Source licenses\
    \ (Visual Studio Code, Spotify, etc)?"
  insecure: "Would you like to allow 'insecure' packages (software with known vulnerabilities)?"
  swcenter: "Would you like to install the Nix Software Center - a graphical software\
    \ manager for Nix?"
  success: "Installation complete. Reboot to start using nix."
nixremove:
  use: "remove"
  long: "Remove the first matching package installed in the default nix profile.\n\
    \nNote: It is possible to have multiple installations of the same package.\n\n\
    If you need more precision use 'nix profile list' and 'nix profile remove'."
  short: "Nix-pakket verwijderen"
  success: "Pakket verwijderd"
nixinstall:
  use: ""
  long: "Install a package from the `nixpkgs` repository as a flake in the default\
    \ nix profile."
  short: "Nix-pakket installeren"
  allowUnfree: "Allow packages with unfree licenses"
  allowInsecure: "Allow packages with known vulnerabilities."
  error: "Pakketten installeren mislukt"
  runInit: "Have you run the `init` command yet?"
  success: "Pakket succesvol geïnstalleerd"
nixupgrade:
  success: "Pakket succesvol bijgewerkt"
  atleastone: "At least one package name required."
purge:
  use: "purge <pakketten>"
  long: "Purge packages inside a managed container"
  short: "Purge packages inside a managed container"
remove:
  use: "remove <pakket>"
  long: "Remove packages inside a managed container."
  short: "Remove packages inside a managed container."
run:
  use: "run <opdracht>"
  long: "Run a program inside a managed container."
  short: "Run a program inside a managed container."
  nixMsg: "Do not use `apx run` for nix packages. Run them directly as you would with\
    \ a native package."
search:
  use: "search <pakketten>"
  long: "Search for packages in a managed container."
  short: "Search for packages in a managed container."
show:
  use: "show <pakket>"
  long: "Show details about a package"
  short: "Show details about a package"
  isInstalled: "Only return whether the package is instaled"
  found: "%s is geïnstalleerd"
  notFound: "%s is niet geïnstalleerd"
unexport:
  use: "unexport <pakket>"
  long: "Unexport/Remove a program's desktop entry from a managed container.\nIf --bin\
    \ flag is provided, remove link to container binary."
  short: "Unexport/Remove a program's desktop entry from a managed container"
  binFlag: "Unexport a previously exported binary."
  success: "Successfully removed exported binary `%s`."
update:
  use: "update"
  long: "De lijst met beschikbare pakketten bijwerken"
  short: "Update the list of available packages"
  allFlag: "Toepassen op alle containers"
upgrade:
  use: "upgrade"
  long: "Upgrade the system by installing/upgrading available packages."
  short: "Upgrade the system by installing/upgrading available packages."
