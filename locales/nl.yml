flags:
  apt: "Pakketten vanuit de Ubuntu-repository installeren"
  aur: "Pakketten vanuit de AUR (Arch User Repository) installeren"
  dnf: "Pakketten vanuit Fedora's DNF (Dandified YUM) installeren"
  apk: "Pakketten vanuit de Alpine-repository installeren"
  zypper: "Pakketten vanuit de OpenSUSE-repository installeren"
  xbps: "Install packages from the Void (Linux) repository."
  nix: "Install packages from the Nixpkgs (Nix packages) repository."
  name: "Apply to custom container with this name."
apx:
  use: ""
  long: "Apx is a package manager with support for multiple sources,\nallowing you\
    \ to install packages in a managed container."
  short: "Apx is a package manager with support for multiple sources,\nallowing you\
    \ to install packages in a managed container."
  verboseFlag: "Gedetailleerdere uitvoer tonen"
  allFlag: "Toepassen op alle containers"
  cxl: "Handeling geannuleerd op verzoek van gebruiker"
  assumeYes: "Doorgaan zonder handmatige bevestiging"
  notForNix: "This command does not apply to the nix environment."
autoremove:
  use: ""
  long: "Alle ongebruikte pakketten automatisch verwijderen"
  short: "Alle ongebruikte pakketten automatisch verwijderen"
clean:
  use: ""
  long: "Clean the apx package manager cache"
  short: "Clean the apx package manager cache"
enter:
  use: ""
  long: "Enter a shell in the managed container"
  short: "Enter a shell in the managed container"
  failedEnter: "failed to enter managed container"
  outside: "You are now outside the managed container."
export:
  use: "export <programma>"
  long: "Export/Recreate a program's desktop entry from a managed container"
  short: "Export/Recreate a program's desktop entry from a managed container"
  binFlag: "Programmaopdracht exporteren"
init:
  use: ""
  long: "Beheerde container initialiseren"
  short: "Beheerde container initialiseren"
  confirm: "Container already exists. Do you want to re-initialize it? This operation\
    \ will remove everything, including your files in the container."
  remove: "Container verwijderen mislukt: %v"
  create: "Container aanmaken mislukt: %v"
install:
  use: "apx install <pakket>"
  long: "Install packages inside a managed container."
  short: "Install packages inside a managed container."
  assumeYes: "Doorgaan zonder handmatige bevestiging"
  fixBroken: "Fix broken dependencies before installing"
  noExport: "Do not export a desktop entry after the installation."
  sideload: "Install a package from a local file."
  sideArgs: "sideload requires the path to a local file"
  sideUserTemp: "can't move file to user temp: %s"
  exportBinPrompt: "Export binary %s to host?\nThis will let you call it directly\
    \ from the shell without using \"apx run\".\nYou can also export it later using\
    \ \"apx export --bin %s\""
list:
  use: ""
  long: "Geïnstalleerde pakketten tonen"
  short: "Geïnstalleerde pakketten tonen"
  upgradable: "Pakketten met updates tonen"
  installed: "Geïnstalleerde pakketten tonen"
nix:
  use: ""
  long: "Manage a custom installation of nix in your $HOME directory.\n\nThe `apx\
    \ nix` integration serves as a wrapper for the\ndefault nix profile. Once installed,\
    \ you are free to use any features of\nnix without using the `apx nix` command."
  short: "Nix-installatie beheren"
nixinit:
  use: ""
  long: "Initializes a custom installation of nix by creating $HOME/.nix and setting\
    \ up some SystemD units to mount it as /nix."
  short: "Nix-repository initialiseren"
  confirm: "This will create a '.nix' folder in your home directory and set up some\
    \ SystemD units to mount that folder at /nix before running the installation.\
    \ Confirm 'y' to continue."
  unfree: "Would you like to allow 'unfree' packages without Open Source licenses\
    \ (Visual Studio Code, Spotify, etc)?"
  insecure: "Would you like to allow 'insecure' packages (software with known vulnerabilities)?"
  swcenter: "Would you like to install the Nix Software Center - a graphical software\
    \ manager for Nix?"
  success: "Installation complete. Reboot to start using nix."
nixremove:
  use: ""
  long: "Remove the first matching package installed in the default nix profile.\n\
    \nNote: It is possible to have multiple installations of the same package.\n\n\
    If you need more precision use 'nix profile list' and 'nix profile remove'."
  short: "Nix-pakket verwijderen"
  success: "Pakket verwijderd"
nixinstall:
  use: ""
  long: "Install a package from the `nixpkgs` repository as a flake in the default\
    \ nix profile."
  short: "Nix-pakket installeren"
  allowUnfree: "Allow packages with unfree licenses"
  allowInsecure: "Allow packages with known vulnerabilities."
  error: "Pakketten installeren mislukt"
  runInit: "Have you run the `init` command yet?"
  success: "Pakket succesvol geïnstalleerd"
nixupgrade:
  success: "Pakket succesvol bijgewerkt"
  atleastone: "At least one package name required."
purge:
  use: "purge <pakketten>"
  long: "Purge packages inside a managed container"
  short: "Purge packages inside a managed container"
remove:
  use: "remove <pakket>"
  long: "Remove packages inside a managed container."
  short: "Remove packages inside a managed container."
run:
  use: "run <opdracht>"
  long: "Run a program inside a managed container."
  short: "Run a program inside a managed container."
  nixMsg: "Do not use `apx run` for nix packages. Run them directly as you would with\
    \ a native package."
search:
  use: "search <pakketten>"
  long: "Search for packages in a managed container."
  short: "Search for packages in a managed container."
show:
  use: "show <pakket>"
  long: "Show details about a package"
  short: "Show details about a package"
  isInstalled: "Only return whether the package is instaled"
  found: "%s is geïnstalleerd"
  notFound: "%s is niet geïnstalleerd"
unexport:
  use: "unexport <pakket>"
  long: "Unexport/Remove a program's desktop entry from a managed container.\nIf --bin\
    \ flag is provided, remove link to container binary."
  short: "Unexport/Remove a program's desktop entry from a managed container"
  binFlag: "Unexport a previously exported binary."
  success: "Successfully removed exported binary `%s`."
update:
  use: ""
  long: "Update the list of available packages"
  short: "Update the list of available packages"
  allFlag: "Toepassen op alle containers"
upgrade:
  use: ""
  long: "Upgrade the system by installing/upgrading available packages."
  short: "Upgrade the system by installing/upgrading available packages."
