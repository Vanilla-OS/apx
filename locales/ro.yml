flags:
  apt: "Instalează pachete din depozitul Ubuntu."
  aur: "Instalează pachete din AUR (Arch User Repository)."
  dnf: "Instalează pachete din depozitul DNF (Dandified YUM) al Fedora."
  apk: "Instalează pachete din depozitul Alpine."
  zypper: "Instalează pachete din depozitul OpenSUSE."
  xbps: "Instalează pachete din depozitul Void (Linux)."
  nix: "Instalează pachete din depozitul Nixpkgs (pachete Nix)."
  swupd: "Instalează pachete din magazinul Clear Linux*"
  name: " Aplică la containerul personalizat cu acest nume."
apx:
  use: "apx"
  long: "Apx este un manager de pachete cu suport pentru mai multe surse,\ncare vă\
    \ permite să instalați pachete într-un container gestionat."
  short: "Apx este un manager de pachete cu suport pentru mai multe surse,\ncare vă
    \ permite să instalați pachete într-un container gestionat."
  verboseFlag: "afișează mai multe detalii"
  allFlag: "Aplică pentru toate containerele."
  cxl: "Operațiune anulată la cererea utilizatorului."
  assumeYes: "Continuă fără confirmare manuală."
  notForNix: "Această comandă nu se aplică mediului nix."
autoremove:
  use: "autoremove"
  long: "Șterge automat toate pachetele nefolosite"
  short: "Șterge automat toate pachetele nefolosite"
clean:
  use: "clean"
  long: "Eliberează memoria cache a managerului de pachete apx"
  short: "Eliberează memoria cache a managerului de pachete apx"
enter:
  use: "enter"
  long: "Intră într-un shell de container gestionat"
  short: "Intră într-un shell de container gestionat"
  failedEnter: "nu se poate intra în containerul gestionat"
  outside: "Vă aflați acum în afara containerului gestionat."
export:
  use: "export <program/binary>"
  long: "Exportă/Recrează un program dintr-un container gestionat pe desktop"
  short: "Exportați/Recreați un program dintr-un container gestionat pe desktop"
  binFlag: "Exportă comanda pachetului"
init:
  use: "init"
  long: "Inițializează un container gestionat"
  short: "Inițializează un container gestionat"
  confirm: "Containerul există deja. Doriți să-l reinițializați? Această operație\
    \ va șterge întregul container, inclusiv fișierele acestuia."
  remove: "eroare la ștergerea containerului: %v"
  create: "eroare la crearea containerului: %v"
install:
  use: "apx install <package>"
  long: "Instalează pachete într-un container gestionat."
  short: "Instalează pachete într-un container gestionat."
  assumeYes: "Continuă fără confirmare manuală"
  fixBroken: "Rezolvă dependențele eronate înainte de instalare"
  noExport: "După instalare nu exporta pe desktop."
  sideload: "Instalează un pachet dintr-un fișier local."
  sideArgs: "sideload necesită calea către un fișier local"
  sideUserTemp: "nu se poate muta fișierul în directorul temporar al utilizatorului: %s"
  exportBinPrompt: "Exportă executabilul %s la gazdă?\nAstfel îl puteți apela direct\
    \ din shell fără a utiliza \"apx run\".\nDe asemenea, îl puteți exporta\
    \ ulterior folosind \"apx export --bin %s\""
list:
  use: "list"
  long: "Listează pachetele instalate."
  short: "Listează pachetele instalate."
  upgradable: "Afișează pachetele care pot fi actualizate"
  installed: "Afișează pachetele instalate"
nix:
  use: "nix"
  long: "Gestionează o instalare personalizată de nix în directorul $HOME.\n\nIntegrarea\
    \ `apx nix` servește ca un recipient pentru\nprofilul nix implicit. Odată instalat,\
    \ puteți folosi orice opțiune din\nnix fără a utiliza comanda `apx nix`."
  short: "Gestionează instalarea nix"
nixinit:
  use: "init"
  long: "Inițializează o instalare personalizată de nix prin crearea $HOME/.nix și\
    \ configurarea unor unități SystemD pentru a o monta ca /nix."
  short: "Inițializează depozitul nix"
  confirm: "Crează un director \".nix\" în directorul dvs. personal și va\
    \ configura unități SystemD pentru a monta acel dosar în /nix înainte de a
    \ rula instalarea. Confirmați \"y\" pentru a continua."
  unfree: "Doriți să permiteți pachetele \"non-gratuite\" fără licență Open Source\
    \ (Visual Studio Code, Spotify, etc.)?"
  insecure: "Doriți să permiteți pachete \"nesigure\" (software cu vulnerabilități\
    \ cunoscute)?"
  swcenter: "Doriți să instalați Nix Software Center - un manager grafic de software\
    \ pentru Nix?"
  success: "Instalare completă. Reporniți pentru a începe să utilizați nix."
nixremove:
  use: "remove"
  long: "Șterge primul pachet instalat în profilul nix implicit.\n\
    \nNotă: Este posibil să existe mai multe instalări ale aceluiași pachet.\n\nDacă
    aveți nevoie de mai multă precizie, utilizați 'nix profile list' și 'nix profile
    remove'."
  short: "Șterge un pachet nix"
  success: "Ștergerea pachetului este completă"
nixinstall:
  use: "install <pkg>"
  long: "Instalează un pachet din depozitul `nixpkgs` ca un flake în profilul nix\
    \ implicit."
  short: "Instalați pachetul nix"
  allowUnfree: "Permite pachete cu licență non-gratuite"
  allowInsecure: "Permite pachete cu vulnerabilități cunoscute."
  error: "eroare la instalarea pachetelor"
  runInit: "Ați rulat comanda `init`?"
  success: "Pachet instalat cu succes."
nixupgrade:
  success: "Pachet actualizat cu succes."
  atleastone: "Trebuie specificat cel puțin un nume de pachet."
purge:
  use: "purge <pachete>"
  long: "Elimină complet pachete din containerul gestionat"
  short: "Elimină complet pachete din containerul gestionat"
remove:
  use: "remove <pachet>"
  long: "Șterge pachete din containerul gestionat."
  short: "Șterge pachete din containerul gestionat."
run:
  use: "run <comandă>"
  long: "Rulează un program din container gestionat."
  short: "Rulează un program din container gestionat."
  nixMsg: "Nu folosiți `apx run` pentru pachetele nix. Rulați-le direct,\
    \ ca pe orice alt un pachet nativ."
search:
  use: "search <pachete>"
  long: "Caută pachete în containerul gestionat."
  short: "Caută pachete în containerul gestionat."
show:
  use: "show <pachet>"
  long: "Afișează detalii despre un pachet"
  short: "Afișează detalii despre un pachet"
  isInstalled: "Afișează doar dacă pachetul este instalat sau nu"
  found: "%s este instalat"
  notFound: "%s nu este instalat"
unexport:
  use: "unexport <pachet>"
  long: "Șterge un program din containerul gestionat de pe desktop.\n
    \ Dacă este furnizat indicatorul --bin, elimină și linkul către executabilul containerului."
  short: "Șterge un program din containerul gestionat de pe desktop.\n
    \ Dacă este furnizat indicatorul --bin, elimină și linkul către executabilul containerului."
  binFlag: "Șterge un executabil exportat anterior."
  success: "Executabilul exportat `%s` a fost șters cu succes."
update:
  use: "update"
  long: "Actualizează lista pachetelor disponibile"
  short: "Actualizează lista pachetelor disponibile"
  allFlag: "Aplică la toate containerele"
upgrade:
  use: "upgrade"
  long: "Actualizează sistemul prin instalarea/actualizarea pachetelor disponibile."
  short: "Actualizează sistemul prin instalarea/actualizarea pachetelor disponibile."
