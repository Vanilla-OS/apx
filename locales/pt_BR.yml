flags:
  apt: "Instalar pacotes do repositório Ubuntu."
  aur: "Instalar pacotes do AUR (Arch User Repository)."
  dnf: "Instalar pacotes do repositório DNF (Dandified YUM) do Fedora."
  apk: "Instalar pacotes do repositório Alpine (Linux)."
  zypper: "Instalar pacotes do repositório OpenSUSE."
  xbps: "Instalar pacotes do repositório Void (Linux)."
  nix: "Instalar pacotes do repositório Nixpkgs (pacotes Nix)."
  name: "Aplicar ao contêiner personalizado com esse nome."
apx:
  use: "apx"
  long: "Apx é um gerenciador de pacotes com suporte para múltiplas fontes,\npermitindo\
    \ a instalação de pacotes em um contêiner gerenciado."
  short: "Apx é um gerenciador de pacotes com suporte para múltiplas fontes,\npermitindo\
    \ a instalação de pacotes em um contêiner gerenciado."
  verboseFlag: "mostrar saída mais detalhada"
  allFlag: "Aplicar para todos os Contêineres."
  cxl: "Operação cancelada a pedido do usuário."
  assumeYes: "Proceder sem confirmação manual."
  notForNix: "Este comando não se aplica ao ambiente nix."
autoremove:
  use: "autoremove"
  long: "Remover todos os pacotes não utilizados automaticamente"
  short: "Remover todos os pacotes não utilizados automaticamente"
clean:
  use: "clean"
  long: "Limpar o cache do gerenciador de pacotes apx"
  short: "Limpar o cache do gerenciador de pacotes apx"
enter:
  use: "enter"
  long: "Adicione um shell no contêiner administrado"
  short: "Adicione um shell no contêiner administrado"
  failedEnter: "falha ao entrar no contêiner gerenciado"
  outside: "Agora você está fora do contêiner gerenciado."
export:
  use: "export <programa/binário>"
  long: "Exportar/Recriar a entrada desktop de um programa a partir de um contêiner\
    \ gerenciado"
  short: "Exportar/Recriar a entrada desktop de um programa a partir de um contêiner\
    \ administrado"
  binFlag: "Exportar comando binário"
init:
  use: "init"
  long: "Inicializar um contêiner gerenciado"
  short: "Inicializar um contêiner administrado"
  confirm: "O contêiner já existe. Você quer reinicializá-lo? Esta operação removerá\
    \ tudo, inclusive seus arquivos no contêiner."
  remove: "erro ao remover o contêiner: %v"
  create: "erro ao criar o contêiner: %v"
install:
  use: "apx install <pacote>"
  long: "Instalar pacotes dentro de um contêiner gerenciado."
  short: "Instalar pacotes dentro de um contêiner gerenciado."
  assumeYes: "Proceder sem confirmação manual"
  fixBroken: "Consertar dependências quebradas antes de continuar a instalação"
  noExport: "Não exportar uma entrada para a área de trabalho após a instalação."
  sideload: "Instalar um pacote a partir de um arquivo local."
  sideArgs: "carregamento lateral (sideload) requer o caminho para um arquivo local"
  sideUserTemp: "não é possível mover o arquivo para a pasta temporária (temp) do\
    \ usuário: %s"
  exportBinPrompt: "Exportar o binário %s para o hospedeiro?\nIsto permitirá que você\
    \ o chame diretamente do shell sem usar \"apx run\".\nVocê também pode exportá-lo\
    \ posteriormente usando \"apx export --bin %s\""
list:
  use: "list"
  long: "Listar os pacotes instalados."
  short: "Listar os pacotes instalados."
  upgradable: "Mostrar pacotes atualizáveis"
  installed: "Mostrar pacotes instalados"
nix:
  use: "nix"
  long: "Gerencie uma instalação personalizada de nix em seu diretório $HOME.\n\n\
    A integração `apx nix` serve como um invólucro para o\nperfil nix padrão. Uma\
    \ vez instalado, você está livre para usar quaisquer características de\nnix sem\
    \ utilizar o comando `apx nix`."
  short: "Gerenciar a instalação de nix"
nixinit:
  use: "init"
  long: "Inicializar uma instalação customizada do nix criando $HOME/.nix e configurando\
    \ algumas unidades do SystemD para montá-lo como /nix."
  short: "Inicializar o repositório nix"
  confirm: "Isto criará uma pasta '.nix' em seu diretório pessoal e configurará algumas\
    \ unidades SystemD para montar essa pasta em /nix antes de executar a instalação.\
    \ Confirme 'y' para continuar."
  unfree: "Você gostaria de permitir pacotes 'não gratuitos' sem licenças Open Source\
    \ (Visual Studio Code, Spotify, etc.)?"
  insecure: "Você gostaria de permitir pacotes 'inseguros' (software com vulnerabilidades\
    \ conhecidas)?"
  swcenter: "Você gostaria de instalar o Nix Software Center - um gerenciador de software\
    \ gráfico para o Nix?"
  success: "Instalação completa. Reinicie para começar a usar nix."
nixremove:
  use: "remove"
  long: "Remover o primeiro pacote correspondente instalado no perfil nix padrão.\n\
    \nNota: É possível ter múltiplas instalações de um mesmo pacote.\n\nSe você precisar\
    \ de mais precisão, use 'lista de perfil nix' e 'remoção de perfil nix'."
  short: "Remover um pacote de nix"
  success: "Remoção do pacote completa"
nixinstall:
  use: "instalar <pkg>"
  long: "Instale um pacote do repositório `nixpkgs` como um floco no perfil nix padrão."
  short: "Instalar pacote nix"
  allowUnfree: "Permitir pacotes com licenças não-livres"
  allowInsecure: "Permitir pacotes com vulnerabilidades conhecidas."
  error: "erro na instalação dos pacotes"
  runInit: "Você já executou o comando `init`?"
  success: "Pacote instalado com sucesso."
nixupgrade:
  success: "Pacote atualizado com sucesso."
  atleastone: "É necessário pelo menos um nome de pacote."
purge:
  use: "purge <pacotes>"
  long: "Remover pacotes dentro de um contêiner gerenciado"
  short: "Remover pacotes dentro de um contêiner gerenciado"
remove:
  use: "remove <pacotes>"
  long: "Remover os pacotes dentro de um contêiner gerenciado."
  short: "Remover os pacotes dentro de um contêiner gerenciado."
run:
  use: "run <comando>"
  long: "Executar um programa dentro de um contêiner administrado."
  short: "Executar um programa dentro de um contêiner administrado."
  nixMsg: "Não utilize `apx run` para pacotes nix. Execute-os diretamente como faria\
    \ com um pacote nativo."
search:
  use: "search <pacotes>"
  long: "Pesquise por pacotes em um contêiner administrado."
  short: "Pesquise por pacotes em um contêiner gerenciado."
show:
  use: "show <pacote>"
  long: "Mostrar detalhes sobre um pacote"
  short: "Mostrar detalhes sobre um pacote"
  isInstalled: "Retornar somente se o pacote estiver instalado"
  found: "%s está instalado"
  notFound: "%s não está instalado"
unexport:
  use: "unexport <pacote>"
  long: "Desexportar/remover a entrada de um programa da área de trabalho de um contêiner\
    \ gerenciado.\nSe --bin flag for fornecido, remova o link para o binário do contêiner."
  short: "Desexportar/remover a entrada de um programa da área de trabalho de um container\
    \ gerenciado"
  binFlag: "Desexportar um binário previamente exportado."
  success: "Binário exportado `%s` foi removido com sucesso."
update:
  use: "update"
  long: "Atualizar a lista de pacotes disponíveis"
  short: "Atualizar a lista de pacotes disponíveis"
  allFlag: "Aplicar a todos os contêineres"
upgrade:
  use: "upgrade"
  long: "Atualize o sistema instalando/atualizando os pacotes disponíveis."
  short: "Atualize o sistema instalando/atualizando os pacotes disponíveis."
