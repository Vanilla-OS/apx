flags:
  apt: "Pasang pakej daripada repositori Ubuntu."
  aur: "Pasang pakej daripada AUR (Arch User Repository)."
  dnf: "Pasang pakej daripada repositori DNF (Dandified YUM) Fedora."
  apk: "Pasang pakej daripada repositori Alpine."
  zypper: "Pasang pakej daripada repositori OpenSUSE."
  xbps: "Pasang pakej daripada repositori Void (Linux)."
  nix: "Pasang pakej daripada repositori Nixpkgs (pakej Nix)."
  swupd: "Pasang pakej daripada Clear Linux*."
  name: " Gunakan nama ini untuk bekas tersuai."
apx:
  use: "apx"
  long: "Apx ialah pengurus pakej yang menyokong pelbagai sumber;\nanda boleh memasang
    pakej-pakej dalam bekas terurus."
  short: "Apx ialah pengurus pakej yang menyokong pelbagai sumber;\nanda boleh memasang
    pakej-pakej dalam bekas terurus."
  verboseFlag: "tunjuk hasil yang lebih teliti"
  allFlag: "Gunakan untuk semua bekas."
  cxl: "Operasi dibatalkan atas permintaan pengguna."
  assumeYes: "Teruskan tanpa pengesahan manual."
  notForNix: "Perintah ini tidak terpakai untuk persekitaran nix."
autoremove:
  use: "autoremove"
  long: "Buang pakej yang tidak digunakan secara automatik"
  short: "Buang pakej yang tidak digunakan secara automatik"
clean:
  use: "clean"
  long: "Bersihkan cache pengurus pakej apx"
  short: "Bersihkan cache pengurus pakej apx"
enter:
  use: "enter"
  long: "Masuk shell dalam bekas terurus"
  short: "Masuk shell dalam bekas terurus"
  failedEnter: "gagal memasuki bekas terurus"
  outside: "Anda kini berada di luar bekas terurus."
export:
  use: "export <program/binari>"
  long: "Eksport/Cipta semula entri desktop program daripada bekas terurus"
  short: "Eksport/Cipta semula entri desktop program daripada bekas terurus"
  binFlag: "Eksport binari perintah"
init:
  use: "init"
  long: "Mulakan bekas terurus"
  short: "Mulakan bekas terurus"
  confirm: "Bekas sudah wujud. Adakah anda ingin mulakan ini semula? Operasi ini akan
    menghapuskan semua pakej dan fail dalam bekas ini."
  remove: "ralat semasa menghapuskan bekas: %v"
  create: "ralat semasa mencipta bekas: %v"
install:
  use: "apx install <pakej>"
  long: "Pasang pakej dalam bekas terurus."
  short: "Pasang pakej dalam bekas terurus."
  assumeYes: "Teruskan tanpa pengesahan manual"
  fixBroken: "Baiki kebergantungan yang rosak sebelum pemasangan"
  noExport: "Jangan eksport entri desktop selepas pemasangan."
  sideload: "Pasang pakej daripada fail tempatan."
  sideArgs: "sideload memerlukan laluan ke fail tempatan"
  sideUserTemp: "gagal mengalihkan fail ke temp pengguna: %s"
  exportBinPrompt: "Eksport binari %s ke perumah?\nAnda boleh menggunakannya terus
    daripada shell tanpa \"apx run\".\nAnda juga boleh eksport ini kemudian dengan
    \"apx export --bin %s\""
list:
  use: "list"
  long: "Senaraikan pakej-pakej dipasang."
  short: "List installed packages."
  upgradable: "Show upgradable packages"
  installed: "Show installed packages"
nix:
  use: "nix"
  long: "Manage a custom installation of nix in your $HOME directory.\n\nThe `apx
    nix` integration serves as a wrapper for the\ndefault nix profile. Once installed,
    you are free to use any features of\nnix without using the `apx nix` command."
  short: "Manage nix installation"
nixinit:
  use: "init"
  long: "Initializes a custom installation of nix by creating $HOME/.nix and setting
    up some SystemD units to mount it as /nix."
  short: "Initialize nix repository"
  confirm: "This will create a '.nix' folder in your home directory and set up some
    SystemD units to mount that folder at /nix before running the installation. Confirm
    'y' to continue."
  unfree: "Would you like to allow 'unfree' packages without Open Source licenses
    (Visual Studio Code, Spotify, etc)?"
  insecure: "Would you like to allow 'insecure' packages (software with known vulnerabilities)?"
  swcenter: "Would you like to install the Nix Software Center - a graphical software
    manager for Nix?"
  success: "Installation complete. Reboot to start using nix."
nixremove:
  use: "remove"
  long: "Remove the first matching package installed in the default nix profile.\n
    \nNote: It is possible to have multiple installations of the same package.\n\n
    If you need more precision use 'nix profile list' and 'nix profile remove'."
  short: "Remove a nix package"
  success: "Package removal complete"
nixinstall:
  use: "install <pkg>"
  long: "Install a package from the `nixpkgs` repository as a flake in the default
    nix profile."
  short: "Install nix package"
  allowUnfree: "Allow packages with unfree licenses"
  allowInsecure: "Allow packages with known vulnerabilities."
  error: "error installing packages"
  runInit: "Have you run the `init` command yet?"
  success: "Successfully installed package."
nixupgrade:
  success: "Successfully upgraded package."
  atleastone: "At least one package name required."
purge:
  use: "purge <packages>"
  long: "Purge packages inside a managed container"
  short: "Purge packages inside a managed container"
remove:
  use: "remove <package>"
  long: "Remove packages inside a managed container."
  short: "Remove packages inside a managed container."
run:
  use: "run <command>"
  long: "Run a program inside a managed container."
  short: "Run a program inside a managed container."
  nixMsg: "Do not use `apx run` for nix packages. Run them directly as you would with
    a native package."
search:
  use: "search <packages>"
  long: "Search for packages in a managed container."
  short: "Search for packages in a managed container."
show:
  use: "show <package>"
  long: "Show details about a package"
  short: "Show details about a package"
  isInstalled: "Only return whether the package is installed"
  found: "%s is installed"
  notFound: "%s is not installed"
unexport:
  use: "unexport <package>"
  long: "Unexport/Remove a program's desktop entry from a managed container.\nIf --bin
    flag is provided, remove link to container binary."
  short: "Unexport/Remove a program's desktop entry from a managed container"
  binFlag: "Unexport a previously exported binary."
  success: "Successfully removed exported binary `%s`."
update:
  use: "update"
  long: "Update the list of available packages"
  short: "Update the list of available packages"
  allFlag: "Apply to all containers"
upgrade:
  use: "upgrade"
  long: "Upgrade the system by installing/upgrading available packages."
  short: "Upgrade the system by installing/upgrading available packages."
