flags:
  apt: "Instale paquetes desde el repositorio de Ubuntu."
  aur: "Instalar paquetes desde el AUR (Arch User Repository)."
  dnf: "Instale los paquetes desde el repositorio DNF (Dandified YUM) de Fedora."
  apk: "Instalar paquetes desde el repositorio Alpine."
  zypper: "Instalar paquetes desde el repositorio OpenSUSE."
  xbps: "Instalar paquetes desde el repositorio de Void (Linux)."
  nix: "Instalar los paquetes desde el repositorio Nixpkgs (paquetes de Nix)"
  swupd: "Instalar paquetes desde la tienda Clear Linux*"
  name: " Aplicar al contenedor personalizado con este nombre."
apx:
  use: "apx"
  long: "Apx es un gestor de paquetes con soporte para varias fuentes,\npermitiendote
    instalar paquetes en un contenedor administrado."
  short: "Apx es un gestor de paquetes con soporte para multiples fuentes,\npermitendote
    instalar paquetes en un contenedor administrado."
  verboseFlag: "mostrar salida mas detallada"
  allFlag: "Aplicable para todos los tipos de contenedores."
  cxl: "Operación cancelada por petición del usuario."
  assumeYes: "Proceder sin confirmacion manual"
  notForNix: "Esto comando no es aplicable al entorno nix"
autoremove:
  use: "autoremove"
  long: "Eliminar automáticamente todos los paquetes no utilizados"
  short: "Eliminar automáticamente todos los paquetes no utilizados"
clean:
  use: "clean"
  long: "Limpiar la cache del gestor de paquetes apx"
  short: "Limpiar la caché del gestor de paquetes apx"
enter:
  use: "enter"
  long: "Introduzca un intérprete de comandos en el contenedor gestionado"
  short: "Introduzca un intérprete de comandos en el contenedor gestionado"
  failedEnter: "fallo al entrar en el contenedor gestionado"
  outside: "Ahora se encuentra fuera del contenedor gestionado."
export:
  use: "export <programa/binario>"
  long: "Exportar/Recrear la entrada de escritorio de un programa desde un contenedor
    gestionado"
  short: "Exportar/Recrear la entrada de escritorio de un programa desde un contenedor
    gestionado"
  binFlag: "Exportar comando binario"
init:
  use: "init"
  long: "Inicializar un contenedor gestionado"
  short: "Inicializar un contenedor gestionado"
  confirm: "El contenedor ya existe. ¿Desea reiniciarlo? Esta operación eliminará
    todo, incluyendo sus archivos en el contenedor."
  remove: "error al eliminar el contenedor: %v"
  create: "error al crear contenedor: %v"
install:
  use: "apx install <paquete>"
  long: "Instalar paquetes dentro de un contenedor gestionado."
  short: "Instalar paquetes dentro de un contenedor gestionado."
  assumeYes: "Realizar sin confirmación manual"
  fixBroken: "Corregir las dependencias rotas antes de instalar"
  noExport: "No exporte una entrada del escritorio después de la instalación."
  sideload: "Instalar un paquete desde un archivo local."
  sideArgs: "sideload requires the path to a local file"
  sideUserTemp: "no se puede mover el archivo a temp de usuario: %s"
  exportBinPrompt: "¿Exportar binario %s al host?\nEsto te permitirá llamarlo directamente
    desde el shell sin usar \"apx run\".\nTambién puedes exportarlo más tarde usando
    \"apx export --bin %s\""
list:
  use: "list"
  long: "Listar paquetes instalados."
  short: "Listar paquetes instalados."
  upgradable: "Mostrar paquetes actualizables"
  installed: "Mostrar paquetes instalados"
nix:
  use: "nix"
  long: "Gestiona una instalación personalizada de nix en tu directorio $HOME.\n\n
    \nLa integración `apx nix` sirve como una envoltura para el\n perfil nix por defecto.
    Una vez instalado, puedes usar cualquiera de las funciones de\n nix sin usar el
    comando `apx nix`"
  short: "Gestionar la instalación de nix"
nixinit:
  use: "init"
  long: "Inicializa una instalación personalizada de nix creando $HOME/.nix y configurando
    algunas unidades SystemD para montarlo como /nix."
  short: "Inicializar repositorio nix"
  confirm: "Esto creará una carpeta '.nix' en tu directorio personal y configurará
    algunas unidades SystemD para montar esa carpeta en /nix antes de ejecutar la
    instalación. Confirme 'y' para continuar."
  unfree: "¿Te gustaría permitir paquetes \"no libres\" sin licencias de código abierto
    (Visual Studio Code, Spotify, etc.)?"
  insecure: "¿Desea permitir paquetes \"inseguros\" (software con vulnerabilidades
    conocidas)?"
  swcenter: "¿Desea instalar el Nix Software Center, un gestor gráfico de software
    para Nix?"
  success: "Instalación completada. Reinicie para empezar a usar nix."
nixremove:
  use: "remove"
  long: "Elimina el primer paquete coincidente instalado en el perfil nix por defecto.\n
    \nNota: Es posible tener varias instalaciones del mismo paquete.\n\nSi necesita
    más precisión utilice 'nix profile list' y 'nix profile remove'."
  short: "Eliminar un paquete nix"
  success: "Eliminación del paquete completada"
nixinstall:
  use: "install <pkg>"
  long: "Instala un paquete del repositorio `nixpkgs` como un flake en el perfil nix
    por defecto."
  short: "Instalar paquete nix"
  allowUnfree: "Permitir paquetes con licencias no libres"
  allowInsecure: "Permitir paquetes con vulnerabilidades conocidas."
  error: "error al instalar paquetes"
  runInit: "¿Has ejecutado ya el comando `init`?"
  success: "Paquete instalado correctamente."
nixupgrade:
  success: "Paquete actualizado correctamente."
  atleastone: "Se requiere al menos un nombre de paquete."
purge:
  use: "purge <paquetes>"
  long: "Purgar paquetes dentro de un contenedor gestionado"
  short: "Purgar paquetes dentro de un contenedor gestionado"
remove:
  use: "remove <paquete>"
  long: "Eliminar paquetes dentro de un contenedor gestionado."
  short: "Eliminar paquetes dentro de un contenedor gestionado."
run:
  use: "run <comando>"
  long: "Ejecutar un programa dentro de un contenedor gestionado."
  short: "Ejecutar un programa dentro de un contenedor gestionado."
  nixMsg: "No utilice `apx run` para paquetes nix. Ejecútelos directamente como lo
    haría con un paquete nativo."
search:
  use: "search <paquetes>"
  long: "Buscar paquetes en un contenedor gestionado."
  short: "Buscar paquetes en un contenedor gestionado."
show:
  use: "mostrar <paquete>"
  long: "Mostrar detalles sobre un paquete"
  short: "Mostrar detalles sobre un paquete"
  isInstalled: "Sólo devuelve si el paquete está instalado"
  found: "%s está instalado"
  notFound: "%s is not installed"
unexport:
  use: "unexport <paquete>"
  long: "Unexport/Remove a program's desktop entry from a managed container.\nIf --bin
    flag is provided, remove link to container binary."
  short: "Desexportar/eliminar la entrada de escritorio de un programa de un contenedor
    gestionado"
  binFlag: "Desexportar un binario previamente exportado."
  success: "Eliminado con éxito el binario exportado `%s`."
update:
  use: "update"
  long: "Actualizar la lista de paquetes disponibles"
  short: "Actualizar la lista de paquetes disponibles"
  allFlag: "Aplicar a todos los contenedores"
upgrade:
  use: "upgrade"
  long: "Actualice el sistema instalando/actualizando los paquetes disponibles."
  short: "Actualice el sistema instalando/actualizando los paquetes disponibles."
